---
# 本项目Taskfile.yml默认作为NixOS的task
# darwin task需要includes进去

version: '3'

vars:
  REBUILD_CMD: darwin-rebuild
  ZZZ: nix profile history --profile /nix/var/nix/profiles/system
  ROLLBACK: sudo darwin-rebuild switch --rollback
  REPL_WITH_FLAKE: "bash -lc 'cd nix && nix repl -f flake:nixpkgs'"


tasks:

  # sudo env http_proxy=http://127.0.0.1:7890 https_proxy=http://127.0.0.1:7890 nixos-rebuild switch
  #--flake .#intel
  build:
    desc: "构建系统配置（不切换）"
    cmds:
      - echo "正在为 {{.HOSTNAME}} ({{.SYSTEM}}) 构建 {{.OS}} 配置..."
      - nix build ./nix#{{.BUILD_TARGET}} --extra-experimental-features 'nix-command flakes'
      - echo "构建完成！"


  build-switch:
    desc: "构建并切换到新配置"
    cmds:
      - echo "正在构建并切换 {{.OS}} 配置..."
      #      - sudo {{.REBUILD_CMD}} switch --flake .#{{.HOSTNAME}}
      - sudo {{.REBUILD_CMD}} switch --flake .#macos-ws --show-trace # FIXME
      - echo "切换到新配置完成！"


  darwin:
    desc: "构建并切换到 nix-darwin 配置"
    cmds:
      - echo "🚀 正在为 {{.HOSTNAME}} ({{.SYSTEM}}) 构建 nix-darwin 配置..."
      - nix build ./nix#{{.BUILD_TARGET}} --extra-experimental-features 'nix-command flakes'
      - echo "🔄 正在切换到新配置..."
      - sudo {{.REBUILD_CMD}} switch --flake ./nix#{{.HOSTNAME}}
      - echo "✅ nix-darwin 配置应用成功！"


  # FIXME 其实可以直接使用 嵌套task，直接复用build就可以了，后面直接添加参数 --show-trace
  darwin-debug:
    desc: "使用详细输出构建并切换（用于调试）"
    cmds:
      - echo "🐛 正在使用调试输出构建 {{.OS}} 配置..."
      - nix build ./nix#{{.BUILD_TARGET}} --show-trace --verbose --extra-experimental-features 'nix-command flakes'
      - echo "🔄 正在使用调试输出切换..."
      - sudo {{.REBUILD_CMD}} switch --flake ./nix#{{.HOSTNAME}} --show-trace --verbose
