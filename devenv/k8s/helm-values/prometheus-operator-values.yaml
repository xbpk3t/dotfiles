# Prometheus Operator values for PAG development environment

# 基础配置
prometheusOperator:
  enabled: true
  admissionWebhooks:
    enabled: true
    patch:
      enabled: true

# Prometheus 配置
prometheus:
  enabled: true
  prometheusSpec:
    retention: 15d
    retentionSize: 50GB
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: standard
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 20Gi

    # 资源限制
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 1000m
        memory: 2Gi

    # 启用额外功能
    enableAdminAPI: false
    enableFeatures:
      - exemplar-storage
      - remote-write-receiver

    # 服务监控选择器
    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    podMonitorSelector: {}
    probeSelector: {}

    # 规则配置
    ruleSelectorNilUsesHelmValues: false
    ruleSelector: {}

    # 额外配置
    additionalScrapeConfigs: []
    additionalAlertManagerConfigs: []

# Grafana 配置
grafana:
  enabled: true
  adminPassword: admin123
  defaultDashboardsEnabled: true

  # 持久化配置
  persistence:
    enabled: true
    storageClassName: standard
    size: 5Gi

  # 服务配置
  service:
    type: LoadBalancer
    port: 80
    targetPort: 3000

  # 数据源配置
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://prometheus-operator-kube-p-prometheus.monitoring.svc.cluster.local:9090
          access: proxy
          isDefault: true
          editable: true

  # 仪表板配置
  dashboards:
    default:
      kubernetes-cluster-monitoring:
        gnetId: 315
        revision: 18
        datasource: Prometheus
      kubernetes-pod-monitoring:
        gnetId: 6417
        revision: 1
        datasource: Prometheus
      node-exporter-full:
        gnetId: 1860
        revision: 31
        datasource: Prometheus

  # 资源限制
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

# Alertmanager 配置
alertmanager:
  enabled: true

  # 持久化配置
  alertmanagerSpec:
    retention: 120h
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: standard
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 2Gi

    # 资源限制
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi

  # 配置文件
  config:
    global:
      resolve_timeout: 5m
    route:
      group_by: ['alertname', 'cluster']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 1h
      receiver: 'web.hook'
    receivers:
      - name: 'web.hook'
        webhook_configs:
          - url: 'http://127.0.0.1:5001/'
    inhibit_rules:
      - source_match:
          severity: 'critical'
        target_match:
          severity: 'warning'
        equal: ['alertname', 'dev', 'instance']

# Node Exporter 配置
nodeExporter:
  enabled: true
  serviceMonitor:
    enabled: true
    relabelings:
      - sourceLabels: [__meta_kubernetes_pod_node_name]
        targetLabel: nodename

# Kube State Metrics 配置
kubeStateMetrics:
  enabled: true
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

# 默认规则
defaultRules:
  enabled: true
  rules:
    alertmanager: true
    etcd: false  # 禁用 etcd 规则，本地集群可能没有 etcd
    configReloaders: true
    general: true
    k8s: true
    kubeApiserver: true
    kubeControllerManager: true
    kubelet: true
    kubeProxy: true
    kubeScheduler: true
    node: true
    nodeNetwork: true
    prometheus: true
    prometheusOperator: true
    windows: false  # 禁用 Windows 相关规则

# 额外配置
additionalPrometheusRules: []

# 网络策略
networkPolicy:
  enabled: false

# 镜像拉取策略
imagePullSecrets: []

# 命名空间
namespaceOverride: "monitoring"
